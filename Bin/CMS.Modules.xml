<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CMS.Modules</name>
    </assembly>
    <members>
        <member name="T:CMS.Modules.ResourceInfo">
            <summary>
            Resource info data container class.
            </summary>
        </member>
        <member name="F:CMS.Modules.ResourceInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.Modules.ResourceInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Modules.ResourceInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Modules.ResourceInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Modules.ResourceInfo.#ctor">
            <summary>
            Constructor, creates an empty ResourceInfo structure.
            </summary>
        </member>
        <member name="M:CMS.Modules.ResourceInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor, creates an empty ResourceInfo object from the given DataRow data.
            </summary>
            <param name="dr">Datarow with the class info data</param>
        </member>
        <member name="M:CMS.Modules.ResourceInfo.InsertAsCloneInternal(CMS.DataEngine.CloneSettings,CMS.DataEngine.CloneResult,CMS.DataEngine.BaseInfo)">
            <summary>
            Inserts cloned object to DB.
            </summary>
            <param name="settings">Cloning settings</param>
            <param name="result">Cloning result</param>
            <param name="originalObject">Original source BaseInfo (object being cloned)</param>
        </member>
        <member name="P:CMS.Modules.ResourceInfo.ResourceId">
            <summary>
            Gets or sets the resource ID.
            </summary>
        </member>
        <member name="P:CMS.Modules.ResourceInfo.PermissionNames">
            <summary>
            List of permission names for current module
            </summary>
        </member>
        <member name="P:CMS.Modules.ResourceInfo.ResourceDisplayName">
            <summary>
            Gets or sets the resource display name.
            </summary>
        </member>
        <member name="P:CMS.Modules.ResourceInfo.ResourceName">
            <summary>
            Gets or sets the resource name.
            </summary>        
        </member>
        <member name="P:CMS.Modules.ResourceInfo.ResourceDescription">
            <summary>
            Gets or sets the resource description.
            </summary>        
        </member>
        <member name="P:CMS.Modules.ResourceInfo.ResourceHasFiles">
            <summary>
            Gets or sets a value indicating whether this module has associated files or assemblies.
            </summary>
            <remarks>
            Modules with associated files or assemblies are considered available only when these files are present.
            Associated files and files are detected by convention. The application checks whether there is a {ResourceName} subfolder in the CMSModules folder or there is a registered module entry with the same name.
            </remarks>
        </member>
        <member name="P:CMS.Modules.ResourceInfo.ShowInDevelopment">
            <summary>
            Gets or sets the value saying if the resource is shown in Development.
            </summary>
        </member>
        <member name="P:CMS.Modules.ResourceInfo.ResourceUrl">
            <summary>
            Gets or sets the resource url.
            </summary>
        </member>
        <member name="P:CMS.Modules.ResourceInfo.ResourceGUID">
            <summary>
            Resource GUID.
            </summary>
        </member>
        <member name="P:CMS.Modules.ResourceInfo.ResourceLastModified">
            <summary>
            Object last modified.
            </summary>
        </member>
        <member name="P:CMS.Modules.ResourceInfo.ResourceIsInDevelopment">
            <summary>
            Indicates if resource is in development. Custom system module is always considered as developed and cannot be set to false
            </summary>
        </member>
        <member name="P:CMS.Modules.ResourceInfo.IsEditable">
            <summary>
            Indicates if resource is editable (resource is in development or development mode is enabled).
            </summary>
        </member>
        <member name="T:CMS.Modules.ResourceInfoProvider">
            <summary>
            Provides access to information about resources.
            </summary>
        </member>
        <member name="M:CMS.Modules.ResourceInfoProvider.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.Modules.ResourceInfoProvider.GetResources">
            <summary>
            Returns all resources.
            </summary>
        </member>
        <member name="M:CMS.Modules.ResourceInfoProvider.GetResources(System.String,System.String)">
            <summary>
            Gets all resources.
            </summary>
            <param name="orderBy">Order by statement to use</param>
            <param name="where">Where condition to filter data</param>
        </member>
        <member name="M:CMS.Modules.ResourceInfoProvider.GetResources(System.String,System.String,System.Int32,System.String)">
            <summary>
            Gets all resources.
            </summary>    
            <param name="where">Where condition to filter data</param>
            /// <param name="orderBy">Order by statement to use</param>
            <param name="topN">Number of data rows which should be included in the result</param>
            <param name="columns">Table columns separated by comma which should be included in the result</param>
        </member>
        <member name="M:CMS.Modules.ResourceInfoProvider.GetResourceInfo(System.Int32)">
            <summary>
            Returns the ResourceInfo structure for the specified resource.
            </summary>
            <param name="resourceId">Id of the resource to retrieve</param>
        </member>
        <member name="M:CMS.Modules.ResourceInfoProvider.GetResourceInfo(System.String)">
            <summary>
            Returns the ResourceInfo structure for the specified resource.
            </summary>
            <param name="resourceName">Resource name to use for retrieving the resource data</param>
        </member>
        <member name="M:CMS.Modules.ResourceInfoProvider.SetResourceInfo(CMS.Modules.ResourceInfo)">
            <summary>
            Sets the specified resource data.
            </summary>
            <param name="resourceObj">Resource data object</param>
        </member>
        <member name="M:CMS.Modules.ResourceInfoProvider.DeleteResourceInfo(CMS.Modules.ResourceInfo)">
            <summary>
            Delete specified resource.
            </summary>
            <param name="resourceObj">Resource object</param>
        </member>
        <member name="M:CMS.Modules.ResourceInfoProvider.DeleteResourceInfo(System.Int32)">
            <summary>
            Delete specified resource.
            </summary>
            <param name="resourceId">Resource ID</param>
        </member>
        <member name="M:CMS.Modules.ResourceInfoProvider.Clear(System.Boolean)">
            <summary>
            Clear hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="M:CMS.Modules.ResourceInfoProvider.GetResources(System.Int32)">
            <summary>
            Gets resources for specified site.
            </summary>
            <param name="siteId">Site ID</param>        
        </member>
        <member name="M:CMS.Modules.ResourceInfoProvider.GetResources(System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Gets resources for specified site.
            </summary>
            <param name="siteId">Site ID</param>        
            <param name="where">Where condition</param>
            <param name="orderBy">Order by</param>
            <param name="topN">Select top N values</param>
            <param name="columns">List of columns which should be selected</param>
        </member>
        <member name="M:CMS.Modules.ResourceInfoProvider.IsResourceAvailable(System.Int32)">
            <summary>
            Returns a value indicating whether the specified resource (module) is available.
            </summary>
            <remarks>
            A resource is available only if a database record exists and a module with the same is installed.
            A resource is also available if a negative identifier value is specified.
            </remarks>
            <param name="resourceId">A resource (module) identifier.</param>
            <returns>True, if the specified resource exists; otherwise, false.</returns>
        </member>
        <member name="M:CMS.Modules.ResourceInfoProvider.IsSystemResource(System.String)">
            <summary>
            Returns true if resource(specified by resource name) is considered as system
            </summary>
            <param name="resourceName">Resource code name</param>
        </member>
        <member name="M:CMS.Modules.ResourceInfoProvider.GetResourcesPerSite(System.Int32)">
            <summary>
            Returns dataSet with resources of specified site.
            </summary>
            <param name="siteId">ID of site</param>
        </member>
        <member name="M:CMS.Modules.ResourceInfoProvider.GetResourcesInternal">
            <summary>
            Returns all resources.
            </summary>
        </member>
        <member name="M:CMS.Modules.ResourceInfoProvider.SetResourceInfoInternal(CMS.Modules.ResourceInfo)">
            <summary>
            Sets the specified resource data.
            </summary>
            <param name="resourceObj">Resource data object</param>
        </member>
        <member name="M:CMS.Modules.ResourceInfoProvider.GetResourceInfoInternal(System.String)">
            <summary>
            Returns the ResourceInfo structure for the specified resource.
            </summary>
            <param name="resourceName">Resource name to use for retrieving the resource data</param>
        </member>
        <member name="M:CMS.Modules.ResourceInfoProvider.GetResourceInfoInternal(System.Int32)">
            <summary>
            Returns the ResourceInfo structure for the specified resource.
            </summary>
            <param name="resourceId">Id of the resource to retrieve</param>
        </member>
        <member name="M:CMS.Modules.ResourceInfoProvider.DeleteResourceInfoInternal(CMS.Modules.ResourceInfo)">
            <summary>
            Delete specified resource.
            </summary>
            <param name="resourceObj">Resource object</param>
        </member>
        <member name="M:CMS.Modules.ResourceInfoProvider.GetResourcesInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Gets all resources.
            </summary>
            <param name="orderBy">Order by statement to use</param>
            <param name="where">Where condition to filter data</param>
            <param name="topN">Number of data rows which should be included in the result</param>
            <param name="columns">Table columns which should be included in the result</param>
        </member>
        <member name="M:CMS.Modules.ResourceInfoProvider.GetResourcesInternal(System.String,System.String,System.Int32,System.String,System.Int32)">
            <summary>
            Gets resources for specified site based on the give parameters.
            </summary>
            <param name="where">Where condition</param>
            <param name="orderBy">Order by</param>
            <param name="topN">Select top N values</param>
            <param name="columns">List of columns which should be selected</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.Modules.ResourceInfoProvider.GetResourcesPerSiteInternal(System.Int32)">
            <summary>
            Returns dataSet with resources of specified site.
            </summary>
            <param name="siteId">ID of site</param>
        </member>
        <member name="T:CMS.Modules.ResourceSiteInfo">
            <summary>
            ResourceSiteInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Modules.ResourceSiteInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.Modules.ResourceSiteInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Modules.ResourceSiteInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Modules.ResourceSiteInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Modules.ResourceSiteInfo.#ctor">
            <summary>
            Constructor - Creates an empty ResourceSiteInfo object.
            </summary>
        </member>
        <member name="M:CMS.Modules.ResourceSiteInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new ResourceSiteInfo object from the given DataRow.
            </summary>
        </member>
        <member name="P:CMS.Modules.ResourceSiteInfo.ResourceID">
            <summary>
            Resource ID.
            </summary>
        </member>
        <member name="P:CMS.Modules.ResourceSiteInfo.SiteID">
            <summary>
            Site ID.
            </summary>
        </member>
        <member name="T:CMS.Modules.ResourceSiteInfoProvider">
            <summary>
            Class providing ResourceSiteInfo management.
            </summary>
        </member>
        <member name="F:CMS.Modules.ResourceSiteInfoProvider.mSiteResources">
            <summary>
            Table of the resources assigned to site [siteName] -> [resourceName -> true]
            </summary>
        </member>
        <member name="M:CMS.Modules.ResourceSiteInfoProvider.GetResourceSites">
            <summary>
            Returns all bindings between modules(resources) and sites.
            </summary>
        </member>
        <member name="M:CMS.Modules.ResourceSiteInfoProvider.GetResourceSites(System.String,System.String)">
            <summary>
            Returns the bindings between modules(resources) and sites.
            </summary>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
        </member>
        <member name="M:CMS.Modules.ResourceSiteInfoProvider.GetResourceSites(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns the bindings between modules(resources) and sites.
            </summary>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
            <param name="columns">Data columns to return</param>
        </member>
        <member name="M:CMS.Modules.ResourceSiteInfoProvider.GetResourceSiteInfo(System.Int32,System.Int32)">
            <summary>
            Returns the ResourceSiteInfo structure for the specified resourceSite.
            </summary>
            <param name="resourceId">ResourceID</param>
            <param name="siteId">SiteID</param>
        </member>
        <member name="M:CMS.Modules.ResourceSiteInfoProvider.SetResourceSiteInfo(CMS.Modules.ResourceSiteInfo)">
            <summary>
            Sets (updates or inserts) specified resourceSite.
            </summary>
            <param name="resourceSite">ResourceSite to set</param>
        </member>
        <member name="M:CMS.Modules.ResourceSiteInfoProvider.DeleteResourceSiteInfo(CMS.Modules.ResourceSiteInfo)">
            <summary>
            Removes specified resource from site.
            </summary>
            <param name="infoObj">ResourceSite object</param>
        </member>
        <member name="M:CMS.Modules.ResourceSiteInfoProvider.Clear">
            <summary>
            Clears the SiteResources hashtable.
            </summary>
        </member>
        <member name="M:CMS.Modules.ResourceSiteInfoProvider.RemoveResourceFromSite(System.Int32,System.Int32)">
            <summary>
            Removes specified resource from site.
            </summary>
            <param name="resourceId">ResourceID</param>
            <param name="siteId">SiteID</param>
        </member>
        <member name="M:CMS.Modules.ResourceSiteInfoProvider.AddResourceToSite(System.Int32,System.Int32)">
            <summary>
            Adds specified resource to the site.
            </summary>
            <param name="resourceId">ResourceID</param>
            <param name="siteId">SiteID</param>
        </member>
        <member name="M:CMS.Modules.ResourceSiteInfoProvider.IsResourceOnSite(System.String,System.String)">
            <summary>
            Returns if the resource is available for specified site.
            </summary>
            <param name="resourceName">Name of the resource</param>
            <param name="siteName">Name of the site</param>
        </member>
        <member name="M:CMS.Modules.ResourceSiteInfoProvider.GetResourceSitesInternal">
            <summary>
            Returns all bindings between modules(resources) and sites.
            </summary>
        </member>
        <member name="M:CMS.Modules.ResourceSiteInfoProvider.GetResourceSitesInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns the bindings between modules(resources) and sites.
            </summary>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
            <param name="columns">Data columns to return</param>
        </member>
        <member name="M:CMS.Modules.ResourceSiteInfoProvider.GetResourceSiteInfoInternal(System.Int32,System.Int32)">
            <summary>
            Returns the ResourceSiteInfo structure for the specified resourceSite.
            </summary>
            <param name="resourceId">ResourceID</param>
            <param name="siteId">SiteID</param>
        </member>
        <member name="M:CMS.Modules.ResourceSiteInfoProvider.SetResourceSiteInfoInternal(CMS.Modules.ResourceSiteInfo)">
            <summary>
            Sets (updates or inserts) specified resourceSite.
            </summary>
            <param name="resourceSite">ResourceSite to set</param>
        </member>
        <member name="M:CMS.Modules.ResourceSiteInfoProvider.DeleteResourceSiteInfoInternal(CMS.Modules.ResourceSiteInfo)">
            <summary>
            Deletes specified resourceSite.
            </summary>
            <param name="infoObj">ResourceSite object</param>
        </member>
        <member name="M:CMS.Modules.ResourceSiteInfoProvider.IsResourceOnSiteInternal(System.String,System.String)">
            <summary>
            Returns if the resource is available for specified site.
            </summary>
            <param name="resourceName">Name of the resource</param>
            <param name="siteName">Name of the site</param>
        </member>
        <member name="P:CMS.Modules.ResourceSiteInfoProvider.SiteResources">
            <summary>
            Table of the resources assigned to site [siteName] -> [resourceName -> true]
            </summary>
        </member>
        <member name="T:CMS.Modules.InternalTestModule">
            <summary>
            Represents the test module.
            </summary>
        </member>
        <member name="M:CMS.Modules.InternalTestModule.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:CMS.Modules.ExportSpecialActions">
            <summary>
            Handles special actions during the export process.
            </summary>
        </member>
        <member name="M:CMS.Modules.ExportSpecialActions.Init">
            <summary>
            Initializes export handlers
            </summary>
        </member>
        <member name="T:CMS.Modules.ImportSpecialActions">
            <summary>
            Handles special actions during the import/export process.
            </summary>
        </member>
        <member name="M:CMS.Modules.ImportSpecialActions.Init">
            <summary>
            Initializes export handlers
            </summary>
        </member>
        <member name="M:CMS.Modules.ImportSpecialActions.EnsureCustomModule">
            <summary>
            Returns custom module for custom elements
            </summary>
        </member>
        <member name="M:CMS.Modules.ImportSpecialActions.ConvertModuleToUIElements(CMS.Modules.ResourceInfo,System.Data.DataRow,CMS.CMSImportExport.SiteImportSettings)">
            <summary>
            Converts module settings to appropriate UI Elements.
            </summary>
            <param name="resource">Module object</param>
            <param name="dr">Module original data</param>
            <param name="settings">Site import settings</param>
        </member>
        <member name="M:CMS.Modules.ImportSpecialActions.IsToolsModule(System.String)">
            <summary>
            Returns true if specified module is standard module from CMS Desk -> Tools section, otherwise returns false.
            </summary>
            <param name="moduleName">Module name to check</param>        
        </member>
        <member name="T:CMS.Modules.ModuleExport">
            <summary>
            Handles special actions during the Module export process.
            </summary>
        </member>
        <member name="M:CMS.Modules.ModuleExport.Init">
            <summary>
            Initializes export handlers
            </summary>
        </member>
        <member name="T:CMS.Modules.ModuleImport">
            <summary>
            Handles special actions during the Module import process.
            </summary>
        </member>
        <member name="M:CMS.Modules.ModuleImport.Init">
            <summary>
            Initializes import handlers
            </summary>
        </member>
        <member name="T:CMS.Modules.ModulesHandlers">
            <summary>
            Event handlers for modules
            </summary>
        </member>
        <member name="M:CMS.Modules.ModulesHandlers.Init">
            <summary>
            Initializes the handlers
            </summary>
        </member>
        <member name="M:CMS.Modules.ModulesHandlers.RegisterVirtualModules(System.Object,System.EventArgs)">
            <summary>
            Registers the virtual modules within the application
            </summary>
        </member>
        <member name="T:CMS.Modules.ModulesModule">
            <summary>
            Represents the Modules module.
            </summary>
        </member>
        <member name="M:CMS.Modules.ModulesModule.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:CMS.Modules.ModulesModule.OnInit">
            <summary>
            Init module
            </summary>
        </member>
        <member name="M:CMS.Modules.ModulesModule.ClearHashtables(System.Boolean)">
            <summary>
            Clears the module hashtables.
            </summary>
            <param name="logTasks">If true, web farm tasks are logged</param>
        </member>
        <member name="T:CMS.Modules.ModulesModuleMetadata">
            <summary>
            Represents the Modules module metadata.
            </summary>
        </member>
        <member name="M:CMS.Modules.ModulesModuleMetadata.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:CMS.Modules.PermissionNameInfo">
            <summary>
            Permission info data container.
            </summary>
        </member>
        <member name="F:CMS.Modules.PermissionNameInfo.OBJECT_TYPE_RESOURCE">
            <summary>
            Object type for resource
            </summary>
        </member>
        <member name="F:CMS.Modules.PermissionNameInfo.OBJECT_TYPE_CLASS">
            <summary>
            Object type for class
            </summary>
        </member>
        <member name="F:CMS.Modules.PermissionNameInfo.TYPEINFORESOURCE">
            <summary>
            Resource type information.
            </summary>
        </member>
        <member name="F:CMS.Modules.PermissionNameInfo.TYPEINFOCLASS">
            <summary>
            Class type information.
            </summary>
        </member>
        <member name="M:CMS.Modules.PermissionNameInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Modules.PermissionNameInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Modules.PermissionNameInfo.#ctor">
            <summary>
            Constructor, creates an empty PermissionNameInfo structure.
            </summary>
        </member>
        <member name="M:CMS.Modules.PermissionNameInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor, creates an empty PermissionNameInfo object from the given DataRow data.
            </summary>
            <param name="dr">Datarow with the class info data</param>
        </member>
        <member name="P:CMS.Modules.PermissionNameInfo.PermissionId">
            <summary>
            Gets or sets the permission ID.
            </summary>
        </member>
        <member name="P:CMS.Modules.PermissionNameInfo.PermissionDisplayName">
            <summary>
            Gets or sets the permission display name.
            </summary>
        </member>
        <member name="P:CMS.Modules.PermissionNameInfo.PermissionName">
            <summary>
            Gets or sets the permission name.
            </summary>
        </member>
        <member name="P:CMS.Modules.PermissionNameInfo.ClassId">
            <summary>
            Gets or sets the class ID.
            </summary>
        </member>
        <member name="P:CMS.Modules.PermissionNameInfo.ResourceId">
            <summary>
            Gets or sets the resource ID.
            </summary>
        </member>
        <member name="P:CMS.Modules.PermissionNameInfo.PermissionGUID">
            <summary>
            Permission GUID.
            </summary>
        </member>
        <member name="P:CMS.Modules.PermissionNameInfo.PermissionLastModified">
            <summary>
            Object last modified.
            </summary>
        </member>
        <member name="P:CMS.Modules.PermissionNameInfo.PermissionDescription">
            <summary>
            The Permission Description.
            </summary>
        </member>
        <member name="P:CMS.Modules.PermissionNameInfo.PermissionDisplayInMatrix">
            <summary>
            Indicates whether the permission should be displayed in the permission matrix as well.
            </summary>
        </member>
        <member name="P:CMS.Modules.PermissionNameInfo.PermissionOrder">
            <summary>
            Gets or sets permission order.
            </summary>
        </member>
        <member name="P:CMS.Modules.PermissionNameInfo.PermissionEditableByGlobalAdmin">
            <summary>
            Indicates whether the permission can be assigned only by global administrators.
            </summary>
        </member>
        <member name="P:CMS.Modules.PermissionNameInfo.TypeInfo">
            <summary>
            Type info.
            </summary>
        </member>
        <member name="T:CMS.Modules.PermissionNameInfoProvider">
            <summary>
            Permission info data container class.
            </summary>
        </member>
        <member name="M:CMS.Modules.PermissionNameInfoProvider.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:CMS.Modules.PermissionNameInfoProvider.GetPermissionNames">
            <summary>
            Returns all permission names.
            </summary>
        </member>
        <member name="M:CMS.Modules.PermissionNameInfoProvider.GetPermissionMatrix(System.Int32,System.String,System.Int32)">
            <summary>
            Returns the permission matrix.
            </summary>
            <param name="permissionId">Permission name ID</param>
            <param name="permissionType">Permission type</param>
            <param name="siteId">Site ID</param>
        </member>
        <member name="M:CMS.Modules.PermissionNameInfoProvider.GetPermissionMatrix(System.Int32,System.String,System.Int32,System.Boolean)">
            <summary>
            Returns the permission matrix.
            </summary>
            <param name="permissionId">Permission name ID</param>
            <param name="permissionType">Permission type</param>
            <param name="siteId">Site ID</param>
            <param name="displayInMatrix">Return permission displayed in matrix</param>
        </member>
        <member name="M:CMS.Modules.PermissionNameInfoProvider.GetPermissionMatrix(System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            Returns the permission matrix.
            </summary>
            <param name="permissionId">Permission name ID</param>
            <param name="permissionType">Permission type</param>
            <param name="siteId">Site ID</param>
            <param name="roleGroupId">Group ID the roles should belong to</param>
        </member>
        <member name="M:CMS.Modules.PermissionNameInfoProvider.GetPermissionMatrix(System.Int32,System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Returns the permission matrix.
            </summary>
            <param name="permissionId">Permission name ID</param>
            <param name="permissionType">Permission type</param>
            <param name="siteId">Site ID</param>
            <param name="roleGroupId">Group ID the roles should belong to</param>
            <param name="displayInMatrix">Return permission displayed in matrix</param>
        </member>
        <member name="M:CMS.Modules.PermissionNameInfoProvider.GetPermissionNameInfoByGUID(System.Guid)">
            <summary>
            Returns object with specified GUID.
            </summary>
            <param name="guid">Object GUID</param>
        </member>
        <member name="M:CMS.Modules.PermissionNameInfoProvider.GetPermissionNameInfoForResource(System.String,System.String,System.String)">
            <summary>
            Returns the permission name info object for the resource.
            </summary>
            <param name="resourceName">Name of the resource which permission depends to</param>
            <param name="permissionName">Name of the permission to retrieve</param>
            <param name="siteName">Site which the permission depends to</param>
        </member>
        <member name="M:CMS.Modules.PermissionNameInfoProvider.GetPermissionNameInfoForClass(System.String,System.String,System.String)">
            <summary>
            Returns the permission name info object for the class.
            </summary>
            <param name="className">Name of the class which permission depends to</param>
            <param name="permissionName">Name of the permission to retrieve</param>
            <param name="siteName">Site which the permission depends to</param>
        </member>
        <member name="M:CMS.Modules.PermissionNameInfoProvider.GetPermissionNameInfo(System.String,System.String,System.String)">
            <summary>
            Returns the PermissionNameInfo object by the given parameters.
            </summary>
            <param name="permissionName">Permission name to retrieve</param>
            <param name="resourceName">Resource name (null when Class permission)</param>
            <param name="className">Class name (null when Resource permission)</param>
        </member>
        <member name="M:CMS.Modules.PermissionNameInfoProvider.GetPermissionNameInfo(System.Int32)">
            <summary>
            Returns the permission name info object.
            </summary>
            <param name="permissionId">Id of the permission to retrieve</param>
        </member>
        <member name="M:CMS.Modules.PermissionNameInfoProvider.SetPermissionInfo(CMS.Modules.PermissionNameInfo)">
            <summary>
            Sets the specified permission data.
            </summary>
            <param name="permissionObj">New permission info data</param>
        </member>
        <member name="M:CMS.Modules.PermissionNameInfoProvider.DeletePermissionInfo(CMS.Modules.PermissionNameInfo)">
            <summary>
            Deletes the specified permission.
            </summary>
            <param name="pni">Permission object</param>
        </member>
        <member name="M:CMS.Modules.PermissionNameInfoProvider.DeletePermissionInfo(System.Int32)">
            <summary>
            Deletes the specified permission.
            </summary>
            <param name="permissionId">Permission ID</param>
        </member>
        <member name="M:CMS.Modules.PermissionNameInfoProvider.GetResourcePermissions(System.Int32)">
            <summary>
            Gets the DataSet of the resource permissions.
            </summary>
            <param name="resourceId">Resource ID</param>
        </member>
        <member name="M:CMS.Modules.PermissionNameInfoProvider.GetClassPermissions(System.Int32)">
            <summary>
            Gets the DataSet of the class permissions.
            </summary>
            <param name="classId">Class ID</param>
        </member>
        <member name="M:CMS.Modules.PermissionNameInfoProvider.GetPermissions(System.Int32,System.Int32)">
            <summary>
            Gets the DataSet of the permissions for specific resource and role.
            </summary>
            <param name="resourceId">ID of the resource the permissions are included in</param>
            <param name="roleId">ID of the role which is granted with requested permissions</param>           
        </member>
        <member name="M:CMS.Modules.PermissionNameInfoProvider.GetPermissionsWhereCondition(System.Int32,System.Int32)">
            <summary>
            Gets the where condition to limit permissions for specific resource and role.
            </summary>
            <param name="resourceId">ID of the resource the permissions are included in</param>
            <param name="roleId">ID of the role which is granted with requested permissions</param> 
        </member>
        <member name="M:CMS.Modules.PermissionNameInfoProvider.CreateDefaultClassPermissions(System.Int32)">
            <summary>
            Creates the default.
            </summary>
            <param name="classId">Class ID</param>
        </member>
        <member name="M:CMS.Modules.PermissionNameInfoProvider.CreateDefaultCustomTablePermissions(System.Int32)">
            <summary>
            Creates the default custom table permissions.
            </summary>
            <param name="classId">Class ID</param>
        </member>
        <member name="M:CMS.Modules.PermissionNameInfoProvider.CreateClassPermission(System.Int32,System.String,System.String)">
            <summary>
            Sets default permission for the new class.
            </summary>
            <param name="classId">Class Id</param>
            <param name="permissionName">Permission name</param>
            <param name="permissionDisplayName">Permission display name</param>
        </member>
        <member name="M:CMS.Modules.PermissionNameInfoProvider.CreateClassPermission(System.Int32,System.String,System.String,System.Int32)">
            <summary>
            Sets default permission for the new class.
            </summary>
            <param name="classId">Class Id</param>
            <param name="permissionName">Permission name</param>
            <param name="permissionDisplayName">Permission display name</param>
            <param name="permissionOrder">Permission order</param>
        </member>
        <member name="M:CMS.Modules.PermissionNameInfoProvider.CreateClassPermission(System.Int32,System.String,System.String,System.Int32,System.String)">
            <summary>
            Sets default permission for the new class.
            </summary>
            <param name="classId">Class Id</param>
            <param name="permissionName">Permission name</param>
            <param name="permissionDisplayName">Permission display name</param>
            <param name="permissionOrder">Permission order</param>
            <param name="permissionDescription">Permission description</param>
        </member>
        <member name="M:CMS.Modules.PermissionNameInfoProvider.DeleteResoucePermissions(System.Int32)">
            <summary>
            Deletes all resource permissions.
            </summary>
            <param name="resourceId">Resource ID</param>
        </member>
        <member name="M:CMS.Modules.PermissionNameInfoProvider.DeleteClassPermissions(System.Int32)">
            <summary>
            Deletes all class permissions.
            </summary>
            <param name="classId">Class ID</param>
        </member>
        <member name="M:CMS.Modules.PermissionNameInfoProvider.MovePermissionUp(System.Int32)">
            <summary>
            Moves specified permission up.
            </summary>
            <param name="permissionId">Permission ID</param>
        </member>
        <member name="M:CMS.Modules.PermissionNameInfoProvider.MovePermissionDown(System.Int32)">
            <summary>
            Moves specified permission down.
            </summary>
            <param name="permissionId">Permission ID</param>
        </member>
        <member name="M:CMS.Modules.PermissionNameInfoProvider.GetLastPermissionOrder(System.Int32,System.Int32)">
            <summary>
            Returns order of the last permission.
            </summary>
            <param name="classId">ID of the class to get last permission order for</param>
            <param name="resourceId">ID of the resource to get last permission order for</param>
            <returns>Number representing the last permission order for the class or resource.</returns>
        </member>
        <member name="M:CMS.Modules.PermissionNameInfoProvider.GetPermissionNames(System.String,System.String,System.Int32,System.String)">
            <summary>
            Gets permissions names.
            </summary>
            <param name="where">Where condition to use</param>
            <param name="orderBy">Order by statement to use</param>
            <param name="topN">TopN parameter</param>
            <param name="columns">Columns to be selected</param>
        </member>
        <member name="M:CMS.Modules.PermissionNameInfoProvider.GetPermissionNamesInternal">
            <summary>
            Returns all permission names.
            </summary>
        </member>
        <member name="M:CMS.Modules.PermissionNameInfoProvider.GetPermissionNamesInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns all the permission names within the system.
            </summary>
            <param name="where">Where condition to use</param>
            <param name="orderBy">Order by statement to use</param>
            <param name="topN">TopN parameter</param>       
            <param name="columns">Data columns to return</param>   
        </member>
        <member name="M:CMS.Modules.PermissionNameInfoProvider.GetPermissionMatrixInternal(System.Int32,System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Returns the permission matrix.
            </summary>
            <param name="permissionId">Permission name ID</param>
            <param name="permissionType">Permission type</param>
            <param name="siteId">Site ID</param>
            <param name="displayInMatrix">Return permission displayed in matrix</param>
            <param name="roleGroupId">Group ID the roles should belong to</param>
        </member>
        <member name="M:CMS.Modules.PermissionNameInfoProvider.GetPermissionNameInfoByGUIDInternal(System.Guid)">
            <summary>
            Returns object with specified GUID.
            </summary>
            <param name="guid">Object GUID</param>
        </member>
        <member name="M:CMS.Modules.PermissionNameInfoProvider.GetPermissionNameInfoForResourceInternal(System.String,System.String,System.String)">
            <summary>
            Returns the permission name info object for the resource.
            </summary>
            <param name="resourceName">Name of the resource which permission depends to</param>
            <param name="permissionName">Name of the permission to retrieve</param>
            <param name="siteName">Site which the permission depends to</param>
        </member>
        <member name="M:CMS.Modules.PermissionNameInfoProvider.GetPermissionNameInfoForClassInternal(System.String,System.String,System.String)">
            <summary>
            Returns the permission name info object for the class.
            </summary>
            <param name="className">Name of the class which permission depends to</param>
            <param name="permissionName">Name of the permission to retrieve</param>
            <param name="siteName">Site which the permission depends to</param>
        </member>
        <member name="M:CMS.Modules.PermissionNameInfoProvider.GetPermissionNameInfoInternal(System.String,System.String,System.String)">
            <summary>
            Returns the PermissionNameInfo object by the given parameters.
            </summary>
            <param name="permissionName">Permission name to retrieve</param>
            <param name="resourceName">Resource name (null when Class permission)</param>
            <param name="className">Class name (null when Resource permission)</param>
        </member>
        <member name="M:CMS.Modules.PermissionNameInfoProvider.GetPermissionNameInfoInternal(System.Int32)">
            <summary>
            Returns the permission name info object.
            </summary>
            <param name="permissionId">Id of the permission to retrieve</param>
        </member>
        <member name="M:CMS.Modules.PermissionNameInfoProvider.SetPermissionInfoInternal(CMS.Modules.PermissionNameInfo)">
            <summary>
            Sets the specified permission data.
            </summary>
            <param name="permissionObj">New permission info data</param>
        </member>
        <member name="M:CMS.Modules.PermissionNameInfoProvider.DeletePermissionInfoInternal(CMS.Modules.PermissionNameInfo)">
            <summary>
            Deletes the specified permission.
            </summary>
            <param name="pni">Permission object</param>
        </member>
        <member name="M:CMS.Modules.PermissionNameInfoProvider.GetResourcePermissionsInternal(System.Int32)">
            <summary>
            Gets the DataSet of the resource permissions.
            </summary>
            <param name="resourceId">Resource ID</param>
        </member>
        <member name="M:CMS.Modules.PermissionNameInfoProvider.GetClassPermissionsInternal(System.Int32)">
            <summary>
            Gets the DataSet of the class permissions.
            </summary>
            <param name="classId">Class ID</param>
        </member>
        <member name="M:CMS.Modules.PermissionNameInfoProvider.GetPermissionsInternal(System.Int32,System.Int32)">
            <summary>
            Gets the DataSet of the permissions for specific resource and role.
            </summary>
            <param name="resourceId">ID of the resource the permissions are included in</param>        
            <param name="roleId">ID of the role which is granted with requested permissions</param>           
        </member>
        <member name="M:CMS.Modules.PermissionNameInfoProvider.MovePermissionUpInternal(System.Int32)">
            <summary>
            Moves specified permission up.
            </summary>
            <param name="permissionId">Permission ID</param>
        </member>
        <member name="M:CMS.Modules.PermissionNameInfoProvider.MovePermissionDownInternal(System.Int32)">
            <summary>
            Moves specified permission down.
            </summary>
            <param name="permissionId">Permission ID</param>
        </member>
        <member name="M:CMS.Modules.PermissionNameInfoProvider.EnsureClassPermissionOrder(CMS.Modules.PermissionNameInfo)">
            <summary>
            Method to ensure correct class default perrmissions order
            </summary>
            <param name="permission">Permission which order should be ensured</param>
        </member>
        <member name="T:CMS.Modules.RolePermissionInfo">
            <summary>
            RolePermissionInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Modules.RolePermissionInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.Modules.RolePermissionInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Modules.RolePermissionInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Modules.RolePermissionInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Modules.RolePermissionInfo.#ctor">
            <summary>
            Constructor - Creates an empty RolePermissionInfo object.
            </summary>
        </member>
        <member name="M:CMS.Modules.RolePermissionInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new RolePermissionInfo object from the given DataRow.
            </summary>
        </member>
        <member name="M:CMS.Modules.RolePermissionInfo.GetPermissionName(CMS.DataEngine.PermissionsEnum)">
            <summary>
            Converts PermissionEnum to permission codename which will be checked when CheckPermission() is called. 
            </summary>
            <param name="permission">Permission to convert to string</param>
        </member>
        <member name="P:CMS.Modules.RolePermissionInfo.PermissionID">
            <summary>
            Permission ID.
            </summary>
        </member>
        <member name="P:CMS.Modules.RolePermissionInfo.RoleID">
            <summary>
            Role ID.
            </summary>
        </member>
        <member name="T:CMS.Modules.RolePermissionInfoProvider">
            <summary>
            Class providing RolePermissionInfo management.
            </summary>
        </member>
        <member name="M:CMS.Modules.RolePermissionInfoProvider.GetRolePermissions">
            <summary>
            Returns all role permissions.
            </summary>
        </member>
        <member name="M:CMS.Modules.RolePermissionInfoProvider.GetRolePermissions(System.String,System.String)">
            <summary>
            Returns the RolePermissionInfo structure for the specified rolePermission.
            </summary>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>        
        </member>
        <member name="M:CMS.Modules.RolePermissionInfoProvider.GetRolePermissions(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns the RolePermissionInfo structure for the specified rolePermission.
            </summary>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>        
            <param name="topN">Specifies number of returned records</param>        
            <param name="columns">Data columns to return</param>
        </member>
        <member name="M:CMS.Modules.RolePermissionInfoProvider.GetRolePermissionInfo(System.Int32,System.Int32)">
            <summary>
            Returns the RolePermissionInfo structure for the specified rolePermission.
            </summary>
            <param name="roleId">RoleID</param>
            <param name="permissionId">PermissionID</param>
        </member>
        <member name="M:CMS.Modules.RolePermissionInfoProvider.SetRolePermissionInfo(CMS.Modules.RolePermissionInfo)">
            <summary>
            Sets (updates or inserts) specified rolePermission.
            </summary>
            <param name="rolePermission">RolePermission to set</param>
        </member>
        <member name="M:CMS.Modules.RolePermissionInfoProvider.SetRolePermissionInfo(System.Int32,System.Int32)">
            <summary>
            Sets (updates or inserts) specified rolePermission.
            </summary>
            <param name="roleId">RoleID</param>
            <param name="permissionId">PermissionID</param>
        </member>
        <member name="M:CMS.Modules.RolePermissionInfoProvider.DeleteRolePermissionInfo(CMS.Modules.RolePermissionInfo)">
            <summary>
            Deletes specified rolePermission.
            </summary>
            <param name="infoObj">RolePermission object</param>
        </member>
        <member name="M:CMS.Modules.RolePermissionInfoProvider.DeleteRolePermissionInfo(System.Int32,System.Int32)">
            <summary>
            Deletes specified rolePermission.
            </summary>
            <param name="roleId">RoleID</param>
            <param name="permissionId">PermissionID</param>
        </member>
        <member name="M:CMS.Modules.RolePermissionInfoProvider.GetRolePermissionsInternal">
            <summary>
            Returns all role permissions.
            </summary>
        </member>
        <member name="M:CMS.Modules.RolePermissionInfoProvider.GetRolePermissionInfoInternal(System.Int32,System.Int32)">
            <summary>
            Returns the RolePermissionInfo structure for the specified rolePermission.
            </summary>
            <param name="roleId">RoleID</param>
            <param name="permissionId">PermissionID</param>
        </member>
        <member name="M:CMS.Modules.RolePermissionInfoProvider.GetRolePermissionsInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Gets all the role permissions data.
            </summary>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>        
            <param name="columns">Data columns to return</param>
        </member>
        <member name="M:CMS.Modules.RolePermissionInfoProvider.SetRolePermissionInfoInternal(CMS.Modules.RolePermissionInfo)">
            <summary>
            Sets (updates or inserts) specified rolePermission.
            </summary>
            <param name="rolePermission">RolePermission to set</param>
        </member>
        <member name="M:CMS.Modules.RolePermissionInfoProvider.DeleteRolePermissionInfoInternal(CMS.Modules.RolePermissionInfo)">
            <summary>
            Deletes specified rolePermission.
            </summary>
            <param name="infoObj">RolePermission object</param>
        </member>
        <member name="T:CMS.Modules.HelpTopicInfo">
            <summary>
            HelpTopicInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Modules.HelpTopicInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.Modules.HelpTopicInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Modules.HelpTopicInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Modules.HelpTopicInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Modules.HelpTopicInfo.#ctor">
            <summary>
            Constructor - Creates an empty HelpTopicInfo object.
            </summary>
        </member>
        <member name="M:CMS.Modules.HelpTopicInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new HelpTopicInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="P:CMS.Modules.HelpTopicInfo.HelpTopicID">
            <summary>
            Help topic ID
            </summary>
        </member>
        <member name="P:CMS.Modules.HelpTopicInfo.HelpTopicUIElementID">
            <summary>
            Help topic UI element ID
            </summary>
        </member>
        <member name="P:CMS.Modules.HelpTopicInfo.HelpTopicName">
            <summary>
            Help topic name
            </summary>
        </member>
        <member name="P:CMS.Modules.HelpTopicInfo.HelpTopicLink">
            <summary>
            Help topic link
            </summary>
        </member>
        <member name="P:CMS.Modules.HelpTopicInfo.HelpTopicOrder">
            <summary>
            Help topic order.
            </summary>
        </member>
        <member name="P:CMS.Modules.HelpTopicInfo.HelpTopicGUID">
            <summary>
            Help topic GUID.
            </summary>
        </member>
        <member name="P:CMS.Modules.HelpTopicInfo.HelpTopicLastModified">
            <summary>
            Help topic last modified
            </summary>
        </member>
        <member name="T:CMS.Modules.HelpTopicInfoProvider">
            <summary>
            Class providing HelpTopicInfo management.
            </summary>
        </member>
        <member name="M:CMS.Modules.HelpTopicInfoProvider.GetHelpTopics">
            <summary>
            Returns a query for all the HelpTopicInfo objects.
            </summary>
        </member>
        <member name="M:CMS.Modules.HelpTopicInfoProvider.GetHelpTopicInfo(System.Int32)">
            <summary>
            Returns HelpTopicInfo with specified ID.
            </summary>
            <param name="id">HelpTopicInfo ID</param>
        </member>
        <member name="M:CMS.Modules.HelpTopicInfoProvider.SetHelpTopicInfo(CMS.Modules.HelpTopicInfo)">
            <summary>
            Sets (updates or inserts) specified HelpTopicInfo.
            </summary>
            <param name="infoObj">HelpTopicInfo to be set</param>
        </member>
        <member name="M:CMS.Modules.HelpTopicInfoProvider.DeleteHelpTopicInfo(CMS.Modules.HelpTopicInfo)">
            <summary>
            Deletes specified HelpTopicInfo.
            </summary>
            <param name="infoObj">HelpTopicInfo to be deleted</param>
        </member>
        <member name="M:CMS.Modules.HelpTopicInfoProvider.DeleteHelpTopicInfo(System.Int32)">
            <summary>
            Deletes HelpTopicInfo with specified ID.
            </summary>
            <param name="id">HelpTopicInfo ID</param>
        </member>
        <member name="M:CMS.Modules.HelpTopicInfoProvider.GetHelpTopicsInternal">
            <summary>
            Returns a query for all the HelpTopicInfo objects.
            </summary>
        </member>
        <member name="M:CMS.Modules.HelpTopicInfoProvider.GetHelpTopicInfoInternal(System.Int32)">
            <summary>
            Returns HelpTopicInfo with specified ID.
            </summary>
            <param name="id">HelpTopicInfo ID</param>        
        </member>
        <member name="M:CMS.Modules.HelpTopicInfoProvider.SetHelpTopicInfoInternal(CMS.Modules.HelpTopicInfo)">
            <summary>
            Sets (updates or inserts) specified HelpTopicInfo.
            </summary>
            <param name="infoObj">HelpTopicInfo to be set</param>        
        </member>
        <member name="M:CMS.Modules.HelpTopicInfoProvider.DeleteHelpTopicInfoInternal(CMS.Modules.HelpTopicInfo)">
            <summary>
            Deletes specified HelpTopicInfo.
            </summary>
            <param name="infoObj">HelpTopicInfo to be deleted</param>        
        </member>
        <member name="T:CMS.Modules.RoleApplicationInfo">
            <summary>
            RoleApplicationInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Modules.RoleApplicationInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.Modules.RoleApplicationInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Modules.RoleApplicationInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Modules.RoleApplicationInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Modules.RoleApplicationInfo.#ctor">
            <summary>
            Constructor - Creates an empty RoleApplicationInfo object.
            </summary>
        </member>
        <member name="M:CMS.Modules.RoleApplicationInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new RoleApplicationInfo object from the given DataRow.
            </summary>
            <param name="dr">DataRow with the object data</param>
        </member>
        <member name="P:CMS.Modules.RoleApplicationInfo.RoleID">
            <summary>
            Role ID.
            </summary>
        </member>
        <member name="P:CMS.Modules.RoleApplicationInfo.ElementID">
            <summary>
            Element ID.
            </summary>
        </member>
        <member name="T:CMS.Modules.RoleApplicationInfoProvider">
            <summary>
            Class providing RoleApplicationInfo management.
            </summary>
        </member>
        <member name="M:CMS.Modules.RoleApplicationInfoProvider.GetRoleApplications">
            <summary>
            Returns all RoleApplicationInfo bindings.
            </summary>
        </member>
        <member name="M:CMS.Modules.RoleApplicationInfoProvider.GetRoleApplicationInfo(System.Int32,System.Int32)">
            <summary>
            Returns RoleApplicationInfo binding structure.
            </summary>
            <param name="roleId">Role ID</param>
            <param name="uielementId">UI element ID</param>  
        </member>
        <member name="M:CMS.Modules.RoleApplicationInfoProvider.SetRoleApplicationInfo(CMS.Modules.RoleApplicationInfo)">
            <summary>
            Sets specified RoleApplicationInfo.
            </summary>
            <param name="infoObj">RoleApplicationInfo to set</param>
        </member>
        <member name="M:CMS.Modules.RoleApplicationInfoProvider.DeleteRoleApplicationInfo(CMS.Modules.RoleApplicationInfo)">
            <summary>
            Deletes specified RoleApplicationInfo binding.
            </summary>
            <param name="infoObj">RoleApplicationInfo object</param>
        </member>
        <member name="M:CMS.Modules.RoleApplicationInfoProvider.RemoveRoleFromUIelement(System.Int32,System.Int32)">
            <summary>
            Deletes RoleApplicationInfo binding.
            </summary>
            <param name="roleId">Role ID</param>
            <param name="uielementId">UI element ID</param>  
        </member>
        <member name="M:CMS.Modules.RoleApplicationInfoProvider.AddRoleToUIelement(System.Int32,System.Int32)">
            <summary>
            Creates RoleApplicationInfo binding. 
            </summary>
            <param name="roleId">Role ID</param>
            <param name="uielementId">UI element ID</param>   
        </member>
        <member name="M:CMS.Modules.RoleApplicationInfoProvider.GetRoleApplicationInfoInternal(System.Int32,System.Int32)">
            <summary>
            Returns the RoleApplicationInfo structure.
            Null if binding doesn't exist.
            </summary>
            <param name="roleId">Role ID</param>
            <param name="uielementId">UI element ID</param>  
        </member>
        <member name="M:CMS.Modules.RoleApplicationInfoProvider.SetRoleApplicationInfoInternal(CMS.Modules.RoleApplicationInfo)">
            <summary>
            Sets specified RoleApplicationInfo binding.
            </summary>
            <param name="infoObj">RoleApplicationInfo object</param>
        </member>
        <member name="M:CMS.Modules.RoleApplicationInfoProvider.DeleteRoleApplicationInfoInternal(CMS.Modules.RoleApplicationInfo)">
            <summary>
            Deletes specified RoleApplicationInfo.
            </summary>
            <param name="infoObj">RoleApplicationInfo object</param>
        </member>
        <member name="M:CMS.Modules.RoleApplicationInfoProvider.RemoveRoleFromUIelementInternal(System.Int32,System.Int32)">
            <summary>
            Deletes RoleApplicationInfo binding.
            </summary>
            <param name="roleId">Role ID</param>
            <param name="uielementId">UI element ID</param>  
        </member>
        <member name="M:CMS.Modules.RoleApplicationInfoProvider.AddRoleToUIelementInternal(System.Int32,System.Int32)">
            <summary>
            Creates RoleApplicationInfo binding. 
            </summary>
            <param name="roleId">Role ID</param>
            <param name="uielementId">UI element ID</param>   
        </member>
        <member name="T:CMS.Modules.RoleUIElementInfo">
            <summary>
            RoleUIElementInfo data container class.
            </summary>
        </member>
        <member name="F:CMS.Modules.RoleUIElementInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.Modules.RoleUIElementInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Modules.RoleUIElementInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Modules.RoleUIElementInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Modules.RoleUIElementInfo.#ctor">
            <summary>
            Constructor - Creates an empty RoleUIElementInfo object.
            </summary>
        </member>
        <member name="M:CMS.Modules.RoleUIElementInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor - Creates a new RoleUIElementInfo object from the given DataRow.
            </summary>
        </member>
        <member name="P:CMS.Modules.RoleUIElementInfo.ElementID">
            <summary>
            ID of the UIElement.
            </summary>
        </member>
        <member name="P:CMS.Modules.RoleUIElementInfo.RoleID">
            <summary>
            ID of the role.
            </summary>
        </member>
        <member name="T:CMS.Modules.RoleUIElementInfoProvider">
            <summary>
            Class providing RoleUIElementInfo management.
            </summary>
        </member>
        <member name="M:CMS.Modules.RoleUIElementInfoProvider.GetRoleUIElements">
            <summary>
            Returns all role UI elements.
            </summary>
        </member>
        <member name="M:CMS.Modules.RoleUIElementInfoProvider.GetRoleUIElements(System.String,System.String)">
            <summary>
            Returns the RoleUIElementInfo structure for the specified role UI element.
            </summary>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>        
        </member>
        <member name="M:CMS.Modules.RoleUIElementInfoProvider.GetRoleUIElementInfo(System.Int32,System.Int32)">
            <summary>
            Returns the RoleUIElementInfo structure for the specified role UI element.
            </summary>
            <param name="roleId">RoleID</param>
            <param name="elementId">ElementID</param>
        </member>
        <member name="M:CMS.Modules.RoleUIElementInfoProvider.SetRoleUIElementInfo(CMS.Modules.RoleUIElementInfo)">
            <summary>
            Sets (updates or inserts) specified role UI element.
            </summary>
            <param name="infoObj">RoleUIElement to set</param>
        </member>
        <member name="M:CMS.Modules.RoleUIElementInfoProvider.DeleteRoleUIElementInfo(CMS.Modules.RoleUIElementInfo)">
            <summary>
            Deletes specified role UI element.
            </summary>
            <param name="infoObj">RoleUIElement object</param>
        </member>
        <member name="M:CMS.Modules.RoleUIElementInfoProvider.DeleteRoleUIElementInfo(System.Int32,System.Int32)">
            <summary>
            Deletes specified role UI Element.
            </summary>
            <param name="roleId">RoleID</param>
            <param name="elementId">ElementID</param>
        </member>
        <member name="M:CMS.Modules.RoleUIElementInfoProvider.AddRoleUIElementInfo(System.Int32,System.Int32)">
            <summary>
            Add specified role UI Element.
            </summary>
            <param name="roleId">RoleID</param>
            <param name="elementId">ElementID</param>
        </member>
        <member name="M:CMS.Modules.RoleUIElementInfoProvider.GetRoleUIElementsInternal">
            <summary>
            Returns all role UI elements.
            </summary>
        </member>
        <member name="M:CMS.Modules.RoleUIElementInfoProvider.GetRoleUIElementInfoInternal(System.Int32,System.Int32)">
            <summary>
            Returns the RoleUIElementInfo structure for the specified role UI element.
            </summary>
            <param name="roleId">RoleID</param>
            <param name="elementId">ElementID</param>
        </member>
        <member name="M:CMS.Modules.RoleUIElementInfoProvider.GetRoleUIElementsInternal(System.String,System.String)">
            <summary>
            Gets all the role UI elements data.
            </summary>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
        </member>
        <member name="M:CMS.Modules.RoleUIElementInfoProvider.SetRoleUIElementInfoInternal(CMS.Modules.RoleUIElementInfo)">
            <summary>
            Sets (updates or inserts) specified role UI element.
            </summary>
            <param name="infoObj">RoleUIElement to set</param>
        </member>
        <member name="M:CMS.Modules.RoleUIElementInfoProvider.DeleteRoleUIElementInfoInternal(CMS.Modules.RoleUIElementInfo)">
            <summary>
            Deletes specified role UI element.
            </summary>
            <param name="infoObj">RoleUIElement object</param>
        </member>
        <member name="T:CMS.Modules.UIElementInfo">
            <summary>
            Permission info data container.
            </summary>
        </member>
        <member name="F:CMS.Modules.UIElementInfo.OBJECT_TYPE">
            <summary>
            Object type
            </summary>
        </member>
        <member name="F:CMS.Modules.UIElementInfo.UIELEMENT_ADMINISTRATION_CODENAME">
            <summary>
            Code name of CMS Desk in UIElements tree
            </summary>
        </member>
        <member name="F:CMS.Modules.UIElementInfo.TYPEINFO">
            <summary>
            Type information.
            </summary>
        </member>
        <member name="M:CMS.Modules.UIElementInfo.GetExisting">
            <summary>
            Returns the existing object based on current object data.
            </summary>
        </member>
        <member name="M:CMS.Modules.UIElementInfo.DeleteObject">
            <summary>
            Deletes the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Modules.UIElementInfo.SetObject">
            <summary>
            Updates the object using appropriate provider.
            </summary>
        </member>
        <member name="M:CMS.Modules.UIElementInfo.#ctor">
            <summary>
            Constructor, creates an empty UIElementInfo structure.
            </summary>
        </member>
        <member name="M:CMS.Modules.UIElementInfo.#ctor(System.Data.DataRow)">
            <summary>
            Constructor, creates an empty UIElementInfo object from the given DataRow data.
            </summary>
            <param name="dr">Datarow with the class info data</param>
        </member>
        <member name="M:CMS.Modules.UIElementInfo.BuildObjectPath(System.String,System.String,System.String,System.String,System.Int32@)">
            <summary>
            Builds the path from the given column.
            </summary>
            <param name="parentColumName">Column of the parent ID</param>
            <param name="pathColumnName">Column name to build the path from</param>
            <param name="levelColumnName">Column name of the level</param>
            <param name="level">Level of the object within the tree hierarchy</param>
            <param name="pathPartColumn">Name of the column which creates the path (IDColumn for IDPath, CodeNameColumn for name path)</param>
        </member>
        <member name="M:CMS.Modules.UIElementInfo.RegisterProperties">
            <summary>
            Registers properties of the object
            </summary>
        </member>
        <member name="M:CMS.Modules.UIElementInfo.InsertAsCloneInternal(CMS.DataEngine.CloneSettings,CMS.DataEngine.CloneResult,CMS.DataEngine.BaseInfo)">
            <summary>
            Inserts cloned object to DB.
            </summary>
            <param name="settings">Cloning settings</param>
            <param name="result">Cloning result</param>
            <param name="originalObject">Original source BaseInfo (object being cloned)</param>
        </member>
        <member name="M:CMS.Modules.UIElementInfo.GetOrderWhereCondition">
            <summary>
            Creates where condition according to Parent, Group and Site settings.
            </summary>
        </member>
        <member name="M:CMS.Modules.UIElementInfo.GetNewElement">
            <summary>
            Finds first element from children collection starting with prefix 'new'
            </summary>
        </member>
        <member name="M:CMS.Modules.UIElementInfo.GetEditElement">
            <summary>
            Finds first element from children collection starting with prefix 'edit'
            </summary>
        </member>
        <member name="M:CMS.Modules.UIElementInfo.GetParentElements">
            <summary>
            Return element's parent objects
            </summary>
        </member>
        <member name="M:CMS.Modules.UIElementInfo.GetApplicationNavigationString(System.String)">
            <summary>
            Returns navigation string that describes a route to the application represented by UI element.
            </summary>
            <param name="cultureCode">Culture code</param>
        </member>
        <member name="M:CMS.Modules.UIElementInfo.LoadDefaultData">
            <summary>
            Loads the default data to the object.
            </summary>
        </member>
        <member name="P:CMS.Modules.UIElementInfo.ChildElements">
            <summary>
            Direct child elements of object
            </summary>
        </member>
        <member name="P:CMS.Modules.UIElementInfo.HelpTopics">
            <summary>
            Help topics related to UI element.
            </summary>
        </member>
        <member name="P:CMS.Modules.UIElementInfo.ElementDescription">
            <summary>
            Description of the UI Element (used for example in the UI Guide).
            </summary>
        </member>
        <member name="P:CMS.Modules.UIElementInfo.ElementProperties">
            <summary>
            UI element's properties
            </summary>
        </member>
        <member name="P:CMS.Modules.UIElementInfo.ElementWebparts">
            <summary>
            UI element's webparts XML definition
            </summary>
        </member>
        <member name="P:CMS.Modules.UIElementInfo.ElementVisibilityCondition">
            <summary>
            Gets or sets a macro condition that must be fulfilled for the UI element to be visible in the system's user interface.
            </summary>
        </member>
        <member name="P:CMS.Modules.UIElementInfo.ElementFeature">
            <summary>
            Element's feature.
            </summary>
        </member>
        <member name="P:CMS.Modules.UIElementInfo.ElementSize">
            <summary>
            Size of the UI Element when it is element of UIToolbar.
            </summary>
        </member>
        <member name="P:CMS.Modules.UIElementInfo.ElementPageTemplateID">
            <summary>
            Element's page template ID
            </summary>
        </member>
        <member name="P:CMS.Modules.UIElementInfo.ElementType">
            <summary>
            Element's type (url, control, template, javascript,..)
            </summary>
        </member>
        <member name="P:CMS.Modules.UIElementInfo.ElementIsCustom">
            <summary>
            Indicates if UI element is custom or system.
            </summary>
        </member>
        <member name="P:CMS.Modules.UIElementInfo.ElementName">
            <summary>
            UI Element code name (unique within the parent resource).
            </summary>
        </member>
        <member name="P:CMS.Modules.UIElementInfo.ElementTargetURL">
            <summary>
            URL of the page which is displayed when UI element (menu item / tab) is clicked. 
            If element does not represent menu item / tab it is empty.
            </summary>
        </member>
        <member name="P:CMS.Modules.UIElementInfo.ElementFullName">
            <summary>
            Element full name.
            </summary>
        </member>
        <member name="P:CMS.Modules.UIElementInfo.ObjectFullName">
            <summary>
            Element's full name
            </summary>
        </member>
        <member name="P:CMS.Modules.UIElementInfo.ElementID">
            <summary>
            ID of the UIElement.
            </summary>
        </member>
        <member name="P:CMS.Modules.UIElementInfo.ElementGUID">
            <summary>
            Unique identifier of the UI element.
            </summary>
        </member>
        <member name="P:CMS.Modules.UIElementInfo.ElementIDPath">
            <summary>
            Path representing the tree path of the UI element.
            </summary>
        </member>
        <member name="P:CMS.Modules.UIElementInfo.ElementLevel">
            <summary>
            UI element level within the tree of all UI elements of the resource.
            </summary>
        </member>
        <member name="P:CMS.Modules.UIElementInfo.ElementLastModified">
            <summary>
            Data and time the element was last modified.
            </summary>
        </member>
        <member name="P:CMS.Modules.UIElementInfo.ElementDisplayName">
            <summary>
            UI Element display name.
            </summary>
        </member>
        <member name="P:CMS.Modules.UIElementInfo.ElementParentID">
            <summary>
            ID of the parent UI element.
            </summary>
        </member>
        <member name="P:CMS.Modules.UIElementInfo.ElementChildCount">
            <summary>
            Number of child UI elements.
            </summary>
        </member>
        <member name="P:CMS.Modules.UIElementInfo.ElementResourceID">
            <summary>
            ID of the resource the UI element belongs to.
            </summary>
        </member>
        <member name="P:CMS.Modules.UIElementInfo.ElementOrder">
            <summary>
            Order within the parent UI element.
            </summary>
        </member>
        <member name="P:CMS.Modules.UIElementInfo.ElementIconPath">
            <summary>
            Relative path to the UI element icon.
            </summary>
        </member>
        <member name="P:CMS.Modules.UIElementInfo.ElementIconClass">
            <summary>
            Element's font icon class name
            </summary>
        </member>
        <member name="P:CMS.Modules.UIElementInfo.ElementCaption">
            <summary>
            UI element caption. If set, UI element represents menu item / tab.
            </summary>
        </member>
        <member name="P:CMS.Modules.UIElementInfo.ElementAccessCondition">
            <summary>
            Gets or sets a macro condition that must be fulfilled to view the UI element's content. 
            If the condition is false, the element displays an access denied error instead of the content. 
            </summary>
        </member>
        <member name="P:CMS.Modules.UIElementInfo.ElementFromVersion">
            <summary>
            Version from which is UI element present in CMS.
            </summary>
        </member>
        <member name="P:CMS.Modules.UIElementInfo.Application">
            <summary>
            Application this UIElement belongs to, or null.
            </summary>
        </member>
        <member name="P:CMS.Modules.UIElementInfo.IsInAdministrationScope">
            <summary>
            Gets the value that indicates whether element is in administration scope (anywhere under the administration element)
            </summary>
        </member>
        <member name="P:CMS.Modules.UIElementInfo.IsApplication">
            <summary>
            Tells you whether UIElement is application or not.
            </summary>
        </member>
        <member name="P:CMS.Modules.UIElementInfo.ElementIsGlobalApplication">
            <summary>
            Indicates whether the element is available in global context and some restrictions are not applied to it.
            </summary>
        </member>
        <member name="P:CMS.Modules.UIElementInfo.ElementCheckModuleReadPermission">
            <summary>
            Indicates if the system should check the "read" permission for the module to which the current UI element is assigned.
            When the "read" permission doesn’t exist for the current module, this setting has no effect.
            </summary>
        </member>
        <member name="T:CMS.Modules.UIElementInfoProvider">
            <summary>
            UIElement info data container class.
            </summary>
        </member>
        <member name="M:CMS.Modules.UIElementInfoProvider.#ctor">
            <summary>
            Constructor. Init hashtables for ID and Fullname (ResourceName|ElementName)
            </summary>
        </member>
        <member name="M:CMS.Modules.UIElementInfoProvider.GetElementCaption(CMS.Modules.UIElementInfo,System.Boolean)">
            <summary>
            Gets the element caption. If caption is not set the display name is used.
            </summary>
            <param name="uiElement">UI element instance</param>
            <param name="localize">Indicates whether output string shout be localized</param>
        </member>
        <member name="M:CMS.Modules.UIElementInfoProvider.GetUIElements">
            <summary>
            Returns all UI elements.
            </summary>
        </member>
        <member name="M:CMS.Modules.UIElementInfoProvider.GetUIElementInfo(System.Guid)">
            <summary>
            Returns object with specified GUID.
            </summary>
            <param name="guid">Object GUID</param>
        </member>
        <member name="M:CMS.Modules.UIElementInfoProvider.GetUIElementInfo(System.Int32)">
            <summary>
            Returns the UIElement info object.
            </summary>
            <param name="elementId">ID of the UIElement to retrieve</param>
        </member>
        <member name="M:CMS.Modules.UIElementInfoProvider.GetRootUIElementInfo(System.Int32)">
            <summary>
            Returns the root UIElement info object for Resource.
            </summary>
            <param name="resourceId">ID of resource (module)</param>
        </member>
        <member name="M:CMS.Modules.UIElementInfoProvider.GetUIElementInfo(System.String,System.String)">
            <summary>
            Returns the UIElement info object.
            </summary>
            <param name="elementName">Codename of the UIElement to retrieve</param>
            <param name="resourceName">Name of the resource (module)</param>
        </member>
        <member name="M:CMS.Modules.UIElementInfoProvider.GetUIElementInfo(System.Int32,System.String)">
            <summary>
            Returns the UIElement info object.
            </summary>
            <param name="elementName">Codename of the UIElement to retrieve</param>
            <param name="resourceId">ID of the resource (module)</param>
        </member>
        <member name="M:CMS.Modules.UIElementInfoProvider.SetUIElementInfo(CMS.Modules.UIElementInfo)">
            <summary>
            Sets the specified UIElement data.
            </summary>
            <param name="infoObj">UIElement info data</param>
        </member>
        <member name="M:CMS.Modules.UIElementInfoProvider.DeleteUIElementInfo(CMS.Modules.UIElementInfo)">
            <summary>
            Deletes the specified UIElement.
            </summary>
            <param name="infoObj">UIElement object</param>
        </member>
        <member name="M:CMS.Modules.UIElementInfoProvider.DeleteUIElementInfo(System.Int32)">
            <summary>
            Deletes the specified UIElement.
            </summary>
            <param name="elementId">Element ID</param>
        </member>
        <member name="M:CMS.Modules.UIElementInfoProvider.GetUIElements(System.String)">
            <summary>
            Returns DataSet with specified UI elements.
            </summary>
            <param name="where">Where condition to filter data</param>
        </member>
        <member name="M:CMS.Modules.UIElementInfoProvider.GetUIElements(System.String,System.String)">
            <summary>
            Returns DataSet with specified UI elements.
            </summary>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
        </member>
        <member name="M:CMS.Modules.UIElementInfoProvider.GetUIElements(System.String,System.String,System.Int32)">
            <summary>
            Returns DataSet with specified UI elements.
            </summary>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>
        </member>
        <member name="M:CMS.Modules.UIElementInfoProvider.GetUIElements(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns DataSet with specified UI elements.
            </summary>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>
            <param name="columns">Data columns to return</param>
        </member>
        <member name="M:CMS.Modules.UIElementInfoProvider.GetUIMenuElements(System.String)">
            <summary>
            Returns DataSet with UI elements from second level to fill UI menu and panel.
            Only elements with not empty ElementCaption will be returned because it says that such elements represent menu items.
            </summary>
            <param name="resourceName">Name of the resource (module)</param>
        </member>
        <member name="M:CMS.Modules.UIElementInfoProvider.GetUIMenuElements(System.String,System.String)">
            <summary>
            Returns DataSet with UI elements to fill UI menu and panel.
            Only elements with not empty ElementCaption will be returned because it says that such elements represent menu items.
            </summary>
            <param name="resourceName">Name of the resource (module)</param>
            /// <param name="elementName">Name of the element</param>
        </member>
        <member name="M:CMS.Modules.UIElementInfoProvider.GetChildUIElements(System.String,System.String)">
            <summary>
            Returns DataSet with child elements of the specified element ordered by ElementOrder. 
            Only elements with not empty ElementCaption will be returned because it says that such elements represent menu items.
            </summary>
            <param name="resourceName">Name of the resource (module)</param>
            <param name="elementName">CodeName of the UIElement</param>
        </member>
        <member name="M:CMS.Modules.UIElementInfoProvider.GetChildUIElements(System.Int32)">
            <summary>
            Returns DataSet with child elements of the specified parent element.
            </summary>
            <param name="parentElementId">ID of the parent UIElement</param>
        </member>
        <member name="M:CMS.Modules.UIElementInfoProvider.GetChildUIElements(System.Int32,System.String)">
            <summary>
            Returns DataSet with child elements of the specified parent element.
            </summary>
            <param name="parentElementId">ID of the parent UIElement</param>
            <param name="columns">Data columns to return</param>
        </member>
        <member name="M:CMS.Modules.UIElementInfoProvider.GetChildUIElement(System.Int32,System.String)">
            <summary>
            Returns dataset with child elements filtered by additional condition
            </summary>
            <param name="parentElementID">Parent element ID</param>
            <param name="additionalWhere">Additional where condition</param>
        </member>
        <member name="M:CMS.Modules.UIElementInfoProvider.GetResourceUIElements(System.Int32)">
            <summary>
            Returns DataSet with child elements of the specified resource element.
            Only first level will be returned.
            </summary>
            <param name="resourceId">ID of the resource</param>
        </member>
        <member name="M:CMS.Modules.UIElementInfoProvider.MoveUIElementUp(System.Int32)">
            <summary>
            Moves specified UI element up within the parent UI element.
            </summary>
            <param name="elementId">ID of the UI element</param>
        </member>
        <member name="M:CMS.Modules.UIElementInfoProvider.MoveUIElementDown(System.Int32)">
            <summary>
            Moves specified UI element down within the parent UI element.
            </summary>
            <param name="elementId">ID of the UI element</param>
        </member>
        <member name="M:CMS.Modules.UIElementInfoProvider.SetUIElementChildCount(System.Int32)">
            <summary>
            Sets correct ElementChildCount to the specified UIElement.
            </summary>
            <param name="elementId">ID of the UIElement</param>
        </member>
        <member name="M:CMS.Modules.UIElementInfoProvider.GetRolesUIElements(System.String,System.String)">
            <summary>
            Returns all UIElements for which the roles have permission.
            </summary>
            <param name="roles">Role IDs</param>
            <param name="columns">Data columns to return</param>
        </member>
        <member name="M:CMS.Modules.UIElementInfoProvider.GetRootUIElementInfo(System.String)">
            <summary>
            Returns root UIElement for the specified module.
            </summary>
            <param name="resourceName">Name of the module</param>
        </member>
        <member name="M:CMS.Modules.UIElementInfoProvider.GetRootChildUIElements(System.String)">
            <summary>
            Returns child UIElements for the specified module.
            </summary>
            <param name="resourceName">Name of the module</param>
        </member>
        <member name="M:CMS.Modules.UIElementInfoProvider.GetLastElementOrder(System.Int32)">
            <summary>
            Returns last element order for specified parent element.
            </summary>
            <param name="parentElementId">Parent element id</param>
        </member>
        <member name="M:CMS.Modules.UIElementInfoProvider.RefreshDataCounts">
            <summary>
            Updates all counts for all sub-objects.
            </summary>
        </member>
        <member name="M:CMS.Modules.UIElementInfoProvider.GetModuleTopUIElement(System.Int32)">
            <summary>
            Gets top module's element (element with lowest element level)
            </summary>
        </member>
        <member name="M:CMS.Modules.UIElementInfoProvider.GetUIElementAllChildren(CMS.Modules.UIElementInfo,System.Int32)">
            <summary>
            Returns all element's children limited by level's offset
            </summary>
            <param name="elem">UI element</param>
            <param name="levelOffset">Level offset from element's level to filter elements.</param>
        </member>
        <member name="M:CMS.Modules.UIElementInfoProvider.GetFirstChildElement(System.Int32)">
            <summary>
            Get first child of UI element
            </summary>
            <param name="elementID">Element ID</param>
        </member>
        <member name="M:CMS.Modules.UIElementInfoProvider.GetApplicationNavigationString(System.String,System.String,System.String)">
            <summary>
            Returns navigation string that describes a route to the application given by UI element.
            </summary>
            <param name="moduleName">Module name</param>
            <param name="elementName">Element name</param>
            <param name="cultureCode">Culture code</param>
        </member>
        <member name="M:CMS.Modules.UIElementInfoProvider.RefreshObjectsCounts">
            <summary>
            Updates all counts for all sub-objects.
            </summary>
        </member>
        <member name="M:CMS.Modules.UIElementInfoProvider.GetUIElementsInternal">
            <summary>
            Returns all UI elements.
            </summary>
        </member>
        <member name="M:CMS.Modules.UIElementInfoProvider.GetFirstChildElementInternal(System.Int32)">
            <summary>
            Get first child of UI element
            </summary>
            <param name="elementID">Element ID</param>
        </member>
        <member name="M:CMS.Modules.UIElementInfoProvider.GetUIElementAllChildrenInternal(CMS.Modules.UIElementInfo,System.Int32)">
            <summary>
            Returns all element's children limited by level's offset
            </summary>
            <param name="elem">UI element</param>
            <param name="levelOffset">Level offset from element's level to filter elements.</param>
        </member>
        <member name="M:CMS.Modules.UIElementInfoProvider.GetUIElementInfoInternal(System.Guid)">
            <summary>
            Returns object with specified GUID.
            </summary>
            <param name="guid">Object GUID</param>
        </member>
        <member name="M:CMS.Modules.UIElementInfoProvider.GetUIElementInfoInternal(System.Int32)">
            <summary>
            Returns the UIElement info object.
            </summary>
            <param name="elementId">ID of the UIElement to retrieve</param>
        </member>
        <member name="M:CMS.Modules.UIElementInfoProvider.GetModuleTopUIElementInternal(System.Int32)">
            <summary>
            Gets top module's element (element with lowest element level)
            </summary>
        </member>
        <member name="M:CMS.Modules.UIElementInfoProvider.GetUIElementInfoInternal(System.String,System.String)">
            <summary>
            Returns the UIElement info object.
            </summary>
            <param name="elementName">Codename of the UIElement to retrieve</param>
            <param name="resourceName">Name of the resource (module)</param>
        </member>
        <member name="M:CMS.Modules.UIElementInfoProvider.GetUIElementInfoInternal(System.Int32,System.String)">
            <summary>
            Returns the UIElement info object.
            </summary>
            <param name="elementName">Codename of the UIElement to retrieve</param>
            <param name="resourceId">ID of the resource (module)</param>
        </member>
        <member name="M:CMS.Modules.UIElementInfoProvider.SetUIElementInfoInternal(CMS.Modules.UIElementInfo)">
            <summary>
            Sets the specified UIElement data.
            </summary>
            <param name="infoObj">UIElement info data</param>
        </member>
        <member name="M:CMS.Modules.UIElementInfoProvider.DeleteUIElementInfoInternal(CMS.Modules.UIElementInfo)">
            <summary>
            Deletes the specified UIElement.
            </summary>
            <param name="infoObj">UIElement object</param>
        </member>
        <member name="M:CMS.Modules.UIElementInfoProvider.GetUIElementsInternal(System.String,System.String,System.Int32,System.String)">
            <summary>
            Returns DataSet with specified UI elements.
            </summary>
            <param name="where">Where condition to filter data</param>
            <param name="orderBy">Order by statement</param>
            <param name="topN">Specifies number of returned records</param>
            <param name="columns">Data columns to return</param>
        </member>
        <member name="M:CMS.Modules.UIElementInfoProvider.GetUIMenuElementsInternal(System.String)">
            <summary>
            Returns DataSet with UI elements from second level to fill UI menu and panel.
            Only elements with not empty ElementCaption will be returned because it says that such elements represent menu items.
            </summary>
            <param name="resourceName">Name of the resource (module)</param>
        </member>
        <member name="M:CMS.Modules.UIElementInfoProvider.GetUIMenuElementsInternal(System.String,System.String)">
            <summary>
            Returns DataSet with UI elements from selected level to fill UI menu and panel.
            Only elements with not empty ElementCaption will be returned because it says that such elements represent menu items.
            </summary>
            <param name="resourceName">Name of the resource (module)</param>
            /// <param name="elementName">Name of the element</param>
        </member>
        <member name="M:CMS.Modules.UIElementInfoProvider.GetChildUIElementsInternal(System.String,System.String)">
            <summary>
            Returns DataSet with child elements of the specified element ordered by ElementOrder. 
            Only elements with not empty ElementCaption will be returned because it says that such elements represent menu items.
            </summary>
            <param name="resourceName">Name of the resource (module)</param>
            <param name="elementName">CodeName of the UIElement</param>
        </member>
        <member name="M:CMS.Modules.UIElementInfoProvider.GetChildUIElementsInternal(System.Int32,System.String)">
            <summary>
            Returns DataSet with child elements of the specified parent element.
            </summary>
            <param name="parentElementId">ID of the parent UIElement</param>
            <param name="columns">Data columns to return</param>
        </member>
        <member name="M:CMS.Modules.UIElementInfoProvider.GetChildUIElementInternal(System.Int32,System.String)">
            <summary>
            Returns dataset with child elements filtered by additional condition
            </summary>
            <param name="parentElementID">Parent element ID</param>
            <param name="additionalWhere">Additional where condition</param>
        </member>
        <member name="M:CMS.Modules.UIElementInfoProvider.GetResourceUIElementsInternal(System.Int32)">
            <summary>
            Returns DataSet with child elements of the specified resource element.
            Only first level will be returned.
            </summary>
            <param name="resourceId">ID of the resource</param>
        </member>
        <member name="M:CMS.Modules.UIElementInfoProvider.MoveUIElementUpInternal(System.Int32)">
            <summary>
            Moves specified UI element up within the parent UI element.
            </summary>
            <param name="elementId">ID of the UI element</param>
        </member>
        <member name="M:CMS.Modules.UIElementInfoProvider.MoveUIElementDownInternal(System.Int32)">
            <summary>
            Moves specified UI element down within the parent UI element.
            </summary>
            <param name="elementId">ID of the UI element</param>
        </member>
        <member name="M:CMS.Modules.UIElementInfoProvider.SetUIElementChildCountInternal(System.Int32)">
            <summary>
            Sets correct ElementChildCount to the specified UIElement.
            </summary>
            <param name="elementId">ID of the UIElement</param>
        </member>
        <member name="M:CMS.Modules.UIElementInfoProvider.GetRolesUIElementsInternal(System.String,System.String)">
            <summary>
            Returns all UIElements for which the given roles have permission.
            </summary>
            <param name="roles">Roles IDs separated with comma</param>
            <param name="columns">Data columns to return</param>
        </member>
        <member name="M:CMS.Modules.UIElementInfoProvider.GetRootUIElementInfoInternal(System.Int32)">
            <summary>
            Returns the root UIElement info object for Resource.
            </summary>
            <param name="resourceId">ID of resource (module)</param>
        </member>
        <member name="M:CMS.Modules.UIElementInfoProvider.GetRootUIElementInfoInternal(System.String)">
            <summary>
            Returns root UIElement for the specified module.
            </summary>
            <param name="resourceName">Name of the module</param>
        </member>
        <member name="M:CMS.Modules.UIElementInfoProvider.GetRootChildUIElementsInternal(System.String)">
            <summary>
            Returns child UIElements for the specified module.
            </summary>
            <param name="resourceName">Name of the module</param>
        </member>
        <member name="M:CMS.Modules.UIElementInfoProvider.GetLastElementOrderInternal(System.Int32)">
            <summary>
            Returns last order for specified parent element.
            </summary>
            <param name="parentElementId">Parent element id</param>
        </member>
        <member name="M:CMS.Modules.UIElementInfoProvider.RefreshDataCountsInternal">
            <summary>
            Updates all counts for all sub-objects.
            </summary>
        </member>
        <member name="M:CMS.Modules.UIElementInfoProvider.GetFullNameDictionary">
            <summary>
            Creates new dictionary for caching the objects by full name
            </summary>
        </member>
        <member name="M:CMS.Modules.UIElementInfoProvider.GetFullNameWhereCondition(System.String)">
            <summary>
            Gets the where condition that searches the object based on the given full name
            </summary>
            <param name="fullName">Object full name</param>
        </member>
        <member name="P:CMS.Modules.UIElementInfoProvider.AllowEditOnlyCurrentModule">
            <summary>
            Indicates whether allow editing only current selected module
            </summary>
        </member>
        <member name="T:CMS.Modules.UIElementSizeEnum">
            <summary>
            Size of the UI Element when used in UI Toolbar.
            </summary>
        </member>
        <member name="F:CMS.Modules.UIElementSizeEnum.Large">
            <summary>
            Large.
            </summary>
        </member>
        <member name="F:CMS.Modules.UIElementSizeEnum.Regular">
            <summary>
            Regular.
            </summary>
        </member>
        <member name="T:CMS.UIControls.UIElementTypeEnum">
            <summary>
            UI element type 
            </summary>
        </member>
        <member name="F:CMS.UIControls.UIElementTypeEnum.Url">
            <summary>
            URL
            </summary>
        </member>
        <member name="F:CMS.UIControls.UIElementTypeEnum.PageTemplate">
            <summary>
            Page template
            </summary>
        </member>
        <member name="F:CMS.UIControls.UIElementTypeEnum.UserControl">
            <summary>
            User control
            </summary>
        </member>
        <member name="F:CMS.UIControls.UIElementTypeEnum.Javascript">
            <summary>
            Javascript
            </summary>
        </member>
        <member name="T:CMS.Modules.VirtualModuleManager">
            <summary>
            Provides a registration of virtual modules.
            </summary>
            <remarks>
            Virtual modules are represented only by a folder in the CMSModules folder, there is no corresponding class derived from the Module class.
            </remarks>
        </member>
        <member name="M:CMS.Modules.VirtualModuleManager.RegisterVirtualModules">
            <summary>
            Registers virtual modules.
            </summary>
            <remarks>
            Virtual modules are registered only if the application is a web application.
            </remarks>
        </member>
        <member name="M:CMS.Modules.VirtualModuleManager.RegisterVirtualModule(System.String,System.String)">
            <summary>
            Registers a virtual module with the specified properties.
            </summary>
            <param name="name">A module name.</param>
            <param name="rootPath">A relative path to the module folder (for example "~/CMSModules/Forums").</param>
        </member>
    </members>
</doc>
